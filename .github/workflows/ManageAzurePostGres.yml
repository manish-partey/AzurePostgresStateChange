# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Reading KeyVault Secrets
      id: ReadKeyVault
      run: |
        InActiveDatabaseUrl=$(az keyvault secret show --name "InActive-database-url" --vault-name "parteyKeyVault1" --query "value" --output tsv)
        ActiveDatabaseUrl=$(az keyvault secret show --name "Active-database-url" --vault-name "parteyKeyVault" --query "value" --output tsv)
        echo "::set-output name=InActiveDatabaseUrl::$InActiveDatabaseUrl"
        echo "::set-output name=ActiveDatabaseUrl::$ActiveDatabaseUrl"
        
    - name: Extract Inactive server name from hostname using Powershell
      id: ReadKeyVaultPowershell
      shell: pwsh
      run: |
            $ServerURLWithHost = "${{ steps.ReadKeyVault.outputs.InActiveDatabaseUrl }}"
            $ServerName = $ServerURLWithHost.Substring(0, $ServerURLWithHost.IndexOf("."))
            echo "::set-output name=ServerName::$ServerName"

    - name: Starting Inactive Postgres Server
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          az postgres flexible-server start  --resource-group rgManish --name "${{ steps.ReadKeyVaultPowershell.outputs.ServerName }}"

    - name: Swapping KeyVault Secrets
      run: |
        az keyvault secret set --vault-name "parteyKeyVault" --name "Active-database-url" --value "${{ steps.ReadKeyVault.outputs.InActiveDatabaseUrl }}"
        az keyvault secret set --vault-name "parteyKeyVault" --name "InActive-database-url" --value "${{ steps.ReadKeyVault.outputs.ActiveDatabaseUrl }}"
        
